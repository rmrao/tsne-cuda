The CLI commands I did to compile tsne-cuda. Mind the paths, also MKL/OpenBLAS search paths are still hardcoded into CMAKE, might need to change them:

conda install conda-forge::faiss-gpu
conda install conda-forge::gflags
conda install conda-forge::gtest

cmake -G "Visual Studio 17 2022" -A x64  -DCMAKE_CONFIGURATION_TYPES:STRING="RelWithDebInfo" -DGFLAGS_ROOT_DIR="C:\Users\Michael\miniconda3\Library" -DFAISS_ROOT_DIR="C:/Users/Michael/miniconda3/Library" -DGTEST_ROOT_DIR="C:\Users\Michael\miniconda3\Library" -B  "C:\Users\Michael\CProjects\tsne-cuda\build" -T cuda=11.8  "C:\Users\Michael\CProjects\tsne-cuda"

"C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\MSBuild.exe" "C:\Users\Michael\CProjects\tsne-cuda\build\tsnecuda.sln"

pip install "C:\Users\Michael\CProjects\tsne-cuda\build\RelWithDebInfo\python"

" if it failed to, copy tsnecuda.dll into "C:\Users\Michael\miniconda3\envs\transformers\Library\bin\tsnecuda.dll manually""

----Questionable things I did not find windows analogue for and commented out----
pthread
sys/time.h
cxx compiler flag -mpopcnt
-Wl,--allow-multiple-definition unrecognized options
